/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useControls } from "leva";
import { useFrame } from "@react-three/fiber";
import { getLunarAgePercent } from "../../singleComponents/Utils/getLunarPhase";

export default function Moon({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/amphibians_monn_v2.glb");
  const { actions, names } = useAnimations(animations, group);

  useEffect(() => {
    actions[names[1]].play().paused = true;
  }, []);

  const togglePhase = () => {
    if (options.localPhase) {
      return getLunarAgePercent();
    } else {
      return options.moonCycle;
    }
  };

  useFrame(() => {
    actions[names[1]].time =
      actions[names[1]].getClip().duration * togglePhase();
  });

  const options = useControls({
    moonCycle: { min: 0, max: 1, value: 0.4 },
    localPhase: false,
  });

  return (
    <group ref={group} {...props} dispose={null} scale={0.125}>
      <group name="Scene">
        <mesh
          name="Moon"
          geometry={nodes.Moon.geometry}
          material={materials.Moon}
          position={[0, 0, 0]}
          scale={8.08}
        >
          <mesh
            name="Moon_Shade"
            geometry={nodes.Moon_Shade.geometry}
            // material={materials.dark_material}
            scale={1.03}
          >
            <meshPhongMaterial
              opacity={0.9}
              color="black"
              transparent={true}
              emissive={true}
            />
          </mesh>
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/amphibians_monn_v2.glb");
